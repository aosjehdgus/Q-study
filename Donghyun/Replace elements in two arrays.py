# <문제> 두 배열의 원소 교체

# 동글이는 두개의 배열 A와 B를 가지고 있습니다. 두 배열은 N개의 원소로 
# 구성되어 있으며, 배열의 원소는 모두 자연수입니다.

# 동글이는 최대 K번의 바꿔치기 연산을 수행할 수 있는데, 
# 바꿔치기 연산이란 배열 A에 있는 원소 하나와 
# 배열 B에 있는 원소 하나를 골라서 두 원소를
# 서로 바꾸는 것을 말합니다.

# 동글이의 최종 목표는 배열 A의 모든 원소의 합이 
# 최대가 되도록 하는 것이며,
# 여러분은 동글이를 도와야 합니다.

# N, K 그리고 배열 A와 B의 정보가 주어졌을 때, 
# 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 
# 배열 A의 모든 원소의 합의 최댓값을 출력하는
# 프로그램을 작성하세요.

# 예를 들어 N = 3, K = 2이고, 배열 A와 B가 다음과 같다고 해봅시다.

# 배열 A = [1,3,4]
# 배열 B = [5,6,6]

# 이 경우, 다음과 같이 두번의 연산을 진행할 수 있습니다.

# 연산 1 ) 배열 A의 '1'과 배열 B의 '6' 바꾸기
# 연산 2 ) 배열 A의 '3'과 배열 B의 '6' 바꾸기

# 두번의 연산 이후 배열 A와 B의 상태는 다음과 같이 구성될 것입니다.

# 배열 A = [6,6,4]
# 배열 B = [5,1,3]

# 이때 배열 A의 모든 원소의 합은 16이 되며, 이것이 최대 값입니다.

# 문제 해결의 아이디어

# 매번 배열 A의 최소 값과 배열 B의 최대 값을 교체한다.
# 배열 A를 오름차순 정렬 하고,
# 배열 B를 내림차순 정렬 한다.

# 이후에 두 배열의 원소를 첫 번째 인덱스부터 차례로 확인하면서
# A의 원소가 B의 원소보다 작을 때에만 교체를 수행한다.

# n과 K를 입력 받기
n, k = map(int, input().split())
# 배열 A의 모든 원소 입력 받기
a = list(map(int,input().split()))
# 배열 B의 모든 원소 입력 받기
b = list(map(int,input().split()))
# 배열 A는 오름차순 정렬
a.sort()
# 배열 B는 내림차순 정렬
b.sort(reverse= True)
# 첫 번째 인덱스부터 확인하며, 두 배열의 원소를 K번 비교
for i in range(k):
    # A의 원소가 B의 원소보다 작은 경우
    if a[i] < b[i]:
        # 두 원소를 Swap
        a[i] ,b[i] = b[i], a[i]
    # A의 원소가 B보다 크거나 같을 때, 반복문 탈출
    else:
        break

print(sum(a)) # 배열 A의 모든 원소의 합을 출력
